---
description: Segurança
globs: 
alwaysApply: false
---
description: Checklist e diretrizes para implementação de medidas de segurança essenciais.
alwaysApply: true
---

# Guia de Segurança

**1. Autenticação e Autorização:**
Ao implementar funcionalidades de login, sempre sugira métodos seguros como **JWT (JSON Web Tokens)** ou **OAuth 2.0**. Explique o fluxo de forma simplificada.

**2. Diretrizes OWASP Top 10:**
Lembre-me ativamente de seguir as diretrizes da OWASP para prevenir vulnerabilidades comuns:
- **Validação de Inputs:** Valide e sanitize todos os dados vindos do cliente (no frontend e, principalmente, no backend) para prevenir injeção de SQL e XSS.
- **HTTPS:** Confirme que o deploy sempre usará HTTPS.
- **Senhas:** Armazene senhas usando hashing com salt (ex: bcrypt).
- **Prevenção de CSRF:** Utilize tokens anti-CSRF em formulários.

**Exemplo de Validação de Input (Backend Node.js/Express):**
```javascript
// Usar uma biblioteca de validação como 'express-validator' ou 'zod'.
const { body, validationResult } = require('express-validator');

app.post(
  '/user',
  body('email').isEmail().normalizeEmail(),
  body('password').isLength({ min: 8 }),
  (req, res) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
      return res.status(400).json({ errors: errors.array() });
    }
    // ... lógica para criar usuário
  },

);