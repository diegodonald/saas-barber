# Script PowerShell para aplicar todas as corre√ß√µes de lint no projeto SaaS Barber
# Execute: .\scripts\fix-all-lint.ps1

Write-Host "üîß Iniciando corre√ß√µes completas de lint..." -ForegroundColor Cyan

# 1. Aplicar configura√ß√µes ESLint melhoradas
Write-Host "üìã Aplicando configura√ß√µes ESLint otimizadas..." -ForegroundColor Yellow

if (Test-Path "backend\.eslintrc.improved.js") {
    Copy-Item "backend\.eslintrc.improved.js" "backend\.eslintrc.js" -Force
    Write-Host "‚úÖ Backend ESLint atualizado" -ForegroundColor Green
}

if (Test-Path "frontend\.eslintrc.improved.cjs") {
    Copy-Item "frontend\.eslintrc.improved.cjs" "frontend\.eslintrc.cjs" -Force
    Write-Host "‚úÖ Frontend ESLint atualizado" -ForegroundColor Green
}

# 2. Limpar console.log desnecess√°rios
Write-Host "üßπ Removendo console.log desnecess√°rios..." -ForegroundColor Yellow
if (Test-Path "scripts\clean-console-logs.js") {
    node scripts\clean-console-logs.js
}

# 3. Executar corre√ß√µes autom√°ticas de lint
Write-Host "üî® Aplicando corre√ß√µes autom√°ticas..." -ForegroundColor Yellow

# Backend
Write-Host "Backend:" -ForegroundColor Cyan
Set-Location backend
try {
    npm run lint:fix 2>$null
    Write-Host "‚úÖ Backend lint aplicado" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Algumas corre√ß√µes manuais podem ser necess√°rias no backend" -ForegroundColor Yellow
}
Set-Location ..

# Frontend  
Write-Host "Frontend:" -ForegroundColor Cyan
Set-Location frontend
try {
    npm run lint:fix 2>$null
    Write-Host "‚úÖ Frontend lint aplicado" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Algumas corre√ß√µes manuais podem ser necess√°rias no frontend" -ForegroundColor Yellow
}
Set-Location ..

# E2E (se estiver configurado)
Write-Host "E2E:" -ForegroundColor Cyan
if (Test-Path "e2e\.eslintrc.cjs") {
    Set-Location e2e
    try {
        npx eslint . --ext .ts --fix 2>$null
        Write-Host "‚úÖ E2E lint aplicado" -ForegroundColor Green
    } catch {
        Write-Host "‚ö†Ô∏è E2E: Configura√ß√£o aplicada, verifica√ß√£o manual recomendada" -ForegroundColor Yellow
    }
    Set-Location ..
}

# 4. Executar formata√ß√£o com Prettier
Write-Host "Formatando c√≥digo com Prettier..." -ForegroundColor Yellow
try {
    npx prettier --write "**/*.ts" --ignore-path .gitignore 2>$null
    Write-Host "Formata√ß√£o aplicada" -ForegroundColor Green
} catch {
    Write-Host "Prettier: Instale prettier globalmente ou localmente" -ForegroundColor Yellow
}

# 5. Verifica√ß√£o final
Write-Host "üîç Verifica√ß√£o final..." -ForegroundColor Yellow

Write-Host "Backend lint status:" -ForegroundColor Cyan
Set-Location backend
try {
    npm run lint --silent
    Write-Host "‚úÖ Backend lint OK" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Backend precisa de corre√ß√µes manuais" -ForegroundColor Red
}
Set-Location ..

Write-Host "Frontend lint status:" -ForegroundColor Cyan
Set-Location frontend
try {
    npm run lint --silent
    Write-Host "‚úÖ Frontend lint OK" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Frontend precisa de corre√ß√µes manuais" -ForegroundColor Red
}
Set-Location ..

Write-Host ""
Write-Host "üéâ Processo de corre√ß√£o de lint conclu√≠do!" -ForegroundColor Green
Write-Host "üí° Se ainda houver erros, verifique:" -ForegroundColor Yellow
Write-Host "   1. Vari√°veis n√£o utilizadas (adicione _ no prefixo se necess√°rio)"
Write-Host "   2. Tipos any expl√≠citos (considere tipagem mais espec√≠fica)"
Write-Host "   3. Console.log em c√≥digo de produ√ß√£o (mova para arquivos de teste)"

Write-Host ""
Write-Host "Pr√≥ximos passos recomendados:" -ForegroundColor Cyan
Write-Host "   1. Executar testes: npm test"
Write-Host "   2. Verificar build: npm run build"
Write-Host "   3. Commit das corre√ß√µes: git add . ; git commit -m 'fix: aplicar corre√ß√µes de lint'"
